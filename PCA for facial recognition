What makes facial recognition in pictures good for PCA?
   pictures of faces generally hae high input dimensionality
   faces hae general patterns that could be captured in smaller
   
   
   
from time import time
import logging
import pylab as pl
from sklearn.cross_validation import train_test_split
from sklearn.datasets import fetch_lfw_people
from sklearn.grid_search import GridSearchCv 
from sklearn.metrics import classification_report
from sklearn.metrics import confusion_matrix
from sklearn.decomposition import RandomizedPCA
from sklearn.svm import SvC

#Display progress logs on stdout
logging.basicConfig(level=logging.INFO,format="%(asctime)s %(message)s")

n_components=150
print "Extracting the top %d eigenfaces from %d faces" % (n_components,X_train.shape[0])
t0=time()
pca=RandomizedPCA(n_components=n_components,whiten=True).fit(X_train)
print "done in %0.3fs" % (time()-t0)

eigenfaces=pca.components_.reshape((n_components,h,w))

print "Projecting the input data on the eigenfaces orthonormal basis"
t0=time()
X_train_pca=pca.transform(X_train)
X_test_pca=pca.transform(X_test)
print"done in %0.3fs" % (time()-t0)

print "Fitting the classifier to the training set"
t0=time()
param_grid={
            "C":[1e3,5e3,1e4,5e4,1e5],
            "gamma":[0.0001,0.0005,0.001,0.005,0.01,0.1]}
clf=GridSearchCv(SvC(kernel="rbf",class_weight="auto"),param_grid)
clf=clf.fit(X_train_pca,y_train)
print "done in %0.3fs" % (time()-t0)
print "Best estimator found by grid search:"
print clf.best_estimator_


#Quantiative evaluation of the model quality on the test set
print "Predicting the people names on the testing set",
t0=time()
y_pred=clf.preddict(X_test_pca)
print "done in %0.3fs" % (time()-t0)

print classification_reporty(y_test,y_pred,target_names=target_names)
print confusion_matrix(y_test,y_pred,labels=range(n_classes))
